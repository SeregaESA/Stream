package Hibernate;

public class EntityLiveCycle {

// Есть 4 состояния сущности - Transient, Persistent, Removed, Detached
//
// Transient - Объект находится в этом состоянии, когда создан с помощью оператора new (ни принадлежит никакой сессии),
//             но ещё не сохранён. EntityManager не управляет им. Что бы проасициировать её с сессией, нужно вызвать
//             методы session.save(entity) или session.saveOrUpdate(entity), тогда сущность переходит в состояние Persistent
//
// Persistent - Объекты переходят в это состояние, когда их сохраняют (save) или извлекают (get, createQuery(hql)) из
//              базы данных (принадлежит persistenceContext сесии). Управляемые объекты автоматически синхронизируются
//              с базой данных при завершении транзакции.
//
// Removed - Это состояние удалённого объекта (после вызова метода delete). Такое состояние появляется, потому что если
//           удалить какой-то объект из базы, то Java-объект сразу никуда не исчезнет, а удалятся после закрытия сессии
//           или вызова метода flush
//
// Detached - Объекты находятся в этом состоянии, когда ими больше не управляет EntityManager (после вызова методов
//            session.evict(), session.clear(), session.close(). Удаляем сущность из persistenceContext), то есть
//            изменения не синхронизируются с базой данных. Такой объект был когда то проосицттрован с сессией.
//            Можно вернуть такие объекты обратно в состояние Persistent вызвав у сесии методы session.save(entity),
//            session.saveOrUpdate(entity), session.merge(entity)
//
}
