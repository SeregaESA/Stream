package SQL;

public class Index {

// B-tree индекс сод. в себе B-tree дерево и имеет состояние unigue(позволяет содержать дубликаты) и Nonunigue(
// дубликаты не потдерж.)
// B-tree эфективен, когда:
// 1. Таблицы очень большие, много строк;
// 2. Если ищется маленькое колличество строк относительно общего числа строк;
// 3. В столбце, который содер. индекс, должно быть много уникальных значенй;
// 4. При применении операторов where и join.
//
// Когда применяются  Primary Key или Unigue, индексы примен. автоматич.
//
// create {unigue | bitmap} index_name schema.index_name on schema.table_name(column1, ....)
//
// Пример: create index IN1 on user(id) - создать индекс(по умолчанию B-Tree unigue) с именем IN1 в табл user в колонке id
// Пример: create unigue index IN2 on user(name) - создается уникальный индекс без дубликатов
// Пример: create index IN1 on user(id, name) - создание индекса для двух столбцов
// Пример:
//
//------------------------------------------------------------------------------------------------------------------------
//
// Bitmap:  (Может работать с null) - не все СУБД потдерживают Bitmap
// 1. Малое колличество уникальных значений;
// 2. Колличество строк большое;
// 3. При использовании булевой логики (and, or, not).
//
// Пример: create bitmap index b_in1 on user(lastName)- создай bitmap индекс с именем b_in1 в табл. user для колонки lastName
}
